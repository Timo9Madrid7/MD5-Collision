1.MD5 definition
MD5 calculates its 128-bit hash value in the following way:
a. The message is split into 512-bit chunks ( M = M0, M1, …, Mn)
b.Let hi be the output of the i-th operation, hi is calculated by the MD5 compression function with Mi-1 and hi-1.
This process is repeated for all Mi with 0 < i < n. The initial value h0 is defined as: h0 = (a0 , b0 , c0 ,d0 ) =
(6745230116 , EFCDAB8916 , 98BADCFE16 , 1032547616)
c.The output of the operation for the last message chunk is the hash value of M.
The compression function is executed in 64 steps, in each step one of the chaining variables a, b, c, d is calculated,
being the output of each block hi = (a0 + a16 , b0 + b16 , c0 + c16 , d0 + d16). To calculate the chaining variables we
split Mi into 32-bit chunks m0 , m1 , ... , m15 . Then the function, f(x, y, z, w, m, s, t) = y + ((x + g(y, z, w) + m + t) mod
232 ) <<< s ( where m is the chunk inputted in that step, s denotes a number for left cyclic shift fixed for each step, t is
a constant number defined for each step and g is a nonlinear function defined for each 16-step round) is used to
calculate the chaining variables in each step in the following ways:
ai = f(ai-1 , bi-1 , ci-1 , di-1 , m, s, t) ,       bi = f(di-1 , ai , bi-1 , ci-1 , m, s, t) ,
ci = f(ci-1 , di , ai , bi-1 , m, s, t) ,           di = f(bi-1 , ci , di , ai , m, s, t)
Referece:https://github.com/3ximus/md5-collisions
2. Wang's approach:
This attack is based on a combined additive and XOR differential method, this way it's possible to create 2 differential
paths for the MD5 compression function which are to be used consecutively to generate a collision. These differential
paths describe precisely how differences between two pairs, (h, M) and (h’, M’) of an intermediate hash value and the
corresponding message block, propagate through the compression function. Using a collision finding algorithm they
search for a collision consisting of two consecutive pairs of blocks (B0 , B0’) and (B1 , B1’) satisfying the 2 differential
paths which start from arbitrary h = h’ values. So the attack can be used to create two messages M and M’ with the
same hash that only differ slightly in two subsequent blocks as shown in the following scheme: = Only the blocks B0 ,
B0’ , B1 and B1’ are generated by the collision finding algorithm, all Mi blocks can be chosen arbitrarily. This property
allows the creation of files with the same hash but different contents.
To efficiently search for message blocks for which these differential paths hold, sufficient conditions are used. These
are a set of conditions of chaining variables for generating collisions, that guarantee the necessary carries and correct
function differences happen. Each condition will give the value of a bit in the chaining variable, and are only used to
find a block B on which message differences will be applied to find B’ and guarantee that a differential path happens.
Referece:https://github.com/3ximus/md5-collisions
